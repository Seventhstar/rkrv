<script>
  Vue.component('v-select', VueSelect.VueSelect)
  Vue.component('datepicker', vuejsDatepicker )

  let app = new Vue({
    el: '.vue_app',
    data: <%= fill_vue_data(@expense, {
      model: 'expense',
      noteValid: '',
      rowValid: false,
      formValid: false,
      confirmModal: false,
      filteredProjects: [],
      readyToChange: false,
      confirmText: 'Изменить организацию на',
      texts: 'comment date new_comment new_amount',
      list_values: 'safe organisation expense_type department user staff',
      lists: "safes organisations expense_types departments+organisation_id users staffs",
      salary_rows:  @expense.expense_salary_rows.map{|s| { id: s.id,
            staff: {label: s.staff_name, value: s.staff_id}, 
            amount: s.amount, comment: s.comment,
            _destroy: false}} 

    }) %> ,
    
    updated(){
      this.onInput();
    },

    mounted(){
      this.$root.$on('onInput', this.onInput)
      this.$root.$on('modalCancel', this.onCancel)
      this.$root.$on('modalYes', this.onYes)
      setTimeout(()=> this.readyToChange = true, 50)
    },

    created(){
    },

    watch: {
    },

    methods: {
      row_field(index, field) {
        return "expense[expense_salary_rows_attributes]["+index+"]["+field+']'
      },

      add_row(){
        if (this.staff !== null){
          this.salary_rows.push({staff: this.staff, 
                                  amount: this.new_amount, 
                                  comment: this.new_comment, 
                                  _destroy: false})
          this.staff = null
          this.new_amount = 0
          this.new_comment = "" 
          this.onInput();

          this.calcTotal();
        }
      },

      calcTotal(){
        let amount = 0
        // .reduce((sum, current) => sum + current, 0)
        // this.salary_rows.filter(sh => !sh._destroy).forEach( r =>{
        //   amount = amount + toInt(r.amount)
        // })
        this.salary_rows.filter(sh => !sh._destroy).reduce((amount, c) => sum + c.amount, 0)
        this.amount = amount
      },

      del_row(index){
        this.salary_rows[index]['_destroy'] = true
        this.calcTotal();
      },

      onCancel() {
        // console.log('onCancel')
        this.confirmModal = false
      },

      onYes() {
        this.organisation = this.department.organisation_id
        this.confirmModal = false
      },

      onInput(e) {
        console.log('onInput(e)', e)
        if (e == undefined) return
        if (e.name == 'department' && this.readyToChange && 
            this.department.organisation_id != this.organisation.value) {
          let o = this.organisations.filter( f => f.value == this.department.organisation_id)
          if (o.length>0 && o[0] != undefined){
          this.confirmText =  'Изменить организацию на ' + o[0].label
          this.confirmModal = true
          }
        }
      }
    }
    
  })
</script>
